1. How to use react in existing project
    a) CDN Links
    b) Downloading library

2. How to create a new react application
    >npx create-react-app appName
    >npm start
    http://localhost:3000



React Components
----------------
- Component is a template used for building application.
- Components are building-block for React application.
- Every Component comprises
    a) Markup
    b) Styles
    c) Logic
- Markup is designed using HTML.
- Styles are defined using CSS, Bootstrap, Sass, Less, Material
- JSX [JavaScript Extension] is used for Logic
        [JavaScript | TypeScript]

- Components allows reusability and easy extensibility.
- You can build custom Components or you can use existing Components provided by various 3rd parties.

Building a React Component
--------------------------
- React Component is a function or class of JavaScript that returns Markup, styles and configures functionality.

- React component is a function or class of JavaScript that returns markup, styles and configures functionality.

- Component function or class are defined in a simple JavaScript file "Component.js"
                                                                       [ Modules ]
    function Name()
    {

    }

    class Name 
    {

    }

- Component is function or class defined in a Module.
- In order to use function or class from Module you have to mark it as "export".

export function Name(){}
export class Name { }

- You can also configure "default export"
export default function Name(){}
export default class Name{}

- You have to import modules and Components
import { Name } from "Module"; // if it is not default
import Name from Module; // if it is default

- Every component must return markup



-function component returns markup using "return" keyword.
export function Name()
{
    return ("<markup></markup>");
}



- Class component returns markup by using "render()"
export class Name 
{
    render(){
        <markup></markup>
    }
}
 
Setup Bootstrap for Application:
. Open terminal
2. Install following libraries
    >npm install bootstrap --save
    >npm install bootstrap-icons --save 
3. Go to Index.js and imports relative CSS files.
    import './node_modules/bootstrap/dist/css/bootstrap.css';
    import './node_modules/bootstrap-icons/font/bootstrap-icons.css';


Ex: Netflix Register

1. Add a new Folder into SRC 
    "Components"
2. Add a New File 
    "NetflixRegisterComponent.js"

export function NetflixRegisterComponent()
{
    return (
        <div className="container-fluid text-center mt-3 bg-dark p-3 text-white w-75 ">
            <p>Ready to watch? Enter your email to create or restart your membership.</p>
            <div className="input-group input-group-lg">
                <input type="email" className="form-control"/> 
                <button className="btn btn-danger">
                    Get Started
                    <span className="bi bi-chevron-right"></span>
                </button>
            </div>
        </div>
    );
}

3. Go to index.js/ App.js 

import React from "react";
import ReactDOM from "react-dom/client";
import { NetflixRegisterComponent } from "./src/components/NetflixRegisterComponent";
import './node_modules/bootstrap/dist/css/bootstrap.css';
import './node_modules/bootstrap-icons/font/bootstrap-icons.css';

const root = ReactDOM.createRoot(document.getElementById("root"));

// Passing a react element inside the root
root.render(
    <React.StrictMode>
        <NetflixRegisterComponent/>
    </React.StrictMode>
);



JSX Rules:
1. You cannot use attributes, only properties are allowed 
    <div class="">      invalid 
    <div className="">  valid

2. Every element requires end tag or self ending.
    <input>             invalid
    <input></input>     valid 
    <input/>            valid
    <img/>              valid 

3. Component will not allow directly multiple lines of markup.
you need a container.
    <h2>Hello</h2>
    <p>Welcome</p>      //invalid 

    <div>
        <h2>Hello</h2>
        <p>Welcome</p> 
    </div>




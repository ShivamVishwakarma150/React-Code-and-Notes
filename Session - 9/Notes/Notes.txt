FAQ: What are the Difference between and function and Class Component ?

Class Component
- it represent a JavaScript Class.
- It is good for extensibility.
- Component class comprises state
- It is known as Stateful Component.
- Life Cycle is configured for Component.
- It handles various phases from initialization to destroy.


- function Component
- It represents a JavaScript function.
- It is not great in extensibility
- It uses less memory
- it is faster
- It is stateless [ from 17+ versions you can use state]
- Explicitly use state
- No life Cycle methods implicitly [ Explicitly you can configure ]

FAQ : Which Component you will design as class?
Ans: The Components that need regular extentions .




Data Binding
------------
- Data Binding is technique that defines how data is binded to UI [View]
- JavaScript and JQuery uses lot of DOM methods for Data Binding
    getElementById()
    getQuerySelector()
    appendChild()
    createElement()

Data Binding in JS 
Eg:-

<!-- Data Binding in JS -->
<head>
    <script>
        var categories = ["All","Electronics","Footwear"];
        function bodyload(){
            categories.forEach(element => {
                var  li = document.createElement("li");
                li.innerHTML = element;
                document.querySelector("ol").appendChild(li);
            });
        }
    </script>
</head>
<body onload="bodyload()">
    <ol>

    </ol>
</body>

Data Binding in JQuery
Eg:-
<!-- Data Binding in JQuery -->
<head>
    <script src="./node_modules/jquery/dist/jquery.js"></script>
    <script>
        var categories = ["All","Electronics","Footwear"];
       $(function(){
        $.each(categories,function(key,value){
            $(`<li>${value}</li>`).appendTo("ol");
        })
       })
    </script>
</head>
<body >
    <ol>

    </ol>
</body>

- React can handle data binding by using binding expression and simple collection methods
- React Data Binding Expression
    "{}"

- you can bind to a property or you can bind as literal
<div>{literal}</div> // bind to a literal
<img src={product.image}> // bind to a property
<input type="text" value={product.Name}/>

Ex:
export default function DataBindingComponent(){
    var product = {
        Name : "Samsung Tv",
        price : 4500.45,
        stock : true
    }
    return (
        <div className="container">
             <h2>Product Details</h2>
             <dl>
                <dt>Name</dt>
                <dd>{product.Name}</dd>
                <dt>Price</dt>
                <dd>{product.price}</dd>
                <dt>Stock</dt>
                <dd>{product.stock ? "Available" : "Not Available "}</dd>
             </dl>
        </div>
    )
}

- You can't bind any dynamic value to attribute.
<input type="text" size="4" required>
size => Attribute  | Property
class => Attribute | X
className -> property


<div class={}> //invalid
<div className={}>

<table height={}> // invalid - table don't have height as property.

// for finding properties of any element 
var ele = document.createElement("img"); // Here we take element as img.
for(var property in ele){
    document.write(property+"<br>");
}



- Binding a collection
        .map()
        .filter()
        .find()
        .toString()
        .join()
        .slice()


export default function DataBindingComponent(){
    var categories = ["All","Electronics","Footwear"];
    return(
        <div className="container">
            <h2>Categories</h2>
            <ol>
                {
                    categories.toString();
                }
            </ol>
        </div>
    )
}
o/p :- All,Electronics,Footwear

Eg:2
export default function DataBindingComponent(){
    var categories = ["All","Electronics","Footwear"];
    return(
        <div className="container">
            <h2>Categories</h2>
            <ol>
                {
                    categories.map(function(category){
                        return(
                            <li>{category></li>
                        )
                    })
                }
            </ol>
            <h2>Select Category</h2>
            <select>
                {
                    categories.map(category=>
                        <option value={category}>{category}</option>
                    )
                }
            </select>
        </div>
    )
}

O/p
1. All 
2. Electronics
3. Footwear
select 


- In React Iterations every iterating item must have a unique key.
Eg:2
export default function DataBindingComponent(){
    var categories = ["All","Electronics","Footwear"];
    return(
        <div className="container">
            <h2>Categories</h2>
            <ol>
                {
                    categories.map(function(category){
                        return(
                            <li key={category}>{category></li>
                        )
                    })
                }
            </ol>
            <h2>Select Category</h2>
            <select>
                {
                    categories.map(category=>
                        <option key={category} value={category}>{category}</option>
                    )
                }
            </select>
        </div>
    )
}

O/p
1. All 
2. Electronics
3. Footwear
select 
